import os
import sys

# # map to and from a list of semitone interval lists:
from pyaudio import PyAudio

sys.path.append(os.path.realpath('..'))
import stored
import notated
import played
import fretted

staff = lambda tab_semitones: [
	{semitone 
		for semitone in semitones 
		if semitone is not None}
	for semitones in tab_semitones
]

pitch = stored.ScientificPitch(notated.notes)
standard_tuning = fretted.Tuning([pitch.parse(note) for note in 'e2 a2 d3 g3 b3 e4'.split()])
et12 = played.equal(432,12)
transposition = stored.Involution(lambda lists: list(map(list, zip(*lists))))

clocks = stored.Composition(transposition, fretted.Tab(standard_tuning, 17, characters_per_note=3)).parse('''
|--11-------11-------11----|--9--------9--------9-----|--9--------9--------9-----|--8--------8--------8-----
|-----11-------11-------11-|-----11-------11-------11-|-----11-------11-------11-|-----9--------9--------9--
|--------12-------12-------|--------10-------10-------|--------10-------10-------|--------10-------10-------
|--------------------------|--------------------------|--------------------------|--------------------------
|--------------------------|--------------------------|--------------------------|--------------------------
|--------------------------|--------------------------|--------------------------|--------------------------
''')

histories_of_x_and_y = stored.Composition(transposition, fretted.Tab(standard_tuning, 17, characters_per_note=2)).parse('''
|---------|-0---------------------------0---|-----------------0-----------0---|---------------------------------|
|-------3-|-----3-----------3---------------|-1-------------------1-----------|---------------------------------|
|-----1---|---------1-----------1-----------|-----2---------------------------|-2-------------------2-----------|
|---3-----|-------------3-----------3-------|---------2---------------2-------|-----1-----------1-------1-------|
|-2-------|-----------------2---------------|-0-----------0-------------------|-------------0---------------0---|
|---------|---------------------------------|---------------------------------|-2-------2-----------------------|
''')

far_leys = stored.Composition(transposition, 
	fretted.Tab(
		fretted.Tuning([pitch.parse(note) for note in 'd2 a2 d3 g3 a3 d4'.split()], capo=0), 
		17, characters_per_note=1
	)
).parse('''
|-4-----2|-----0--|--------|--0-----|
|----0---|---0----|-0--0--0|--------|
|--0--0--|-0-----0|--2-44-4|7--7-0-0|
|---0--0-|--0---0-|---0--0-|-0--0-0-|
|2-------|2-------|--------|------0-|
|--------|--------|0-------|--------|
''')

parasite = stored.Composition(transposition, 
	fretted.Tab(
		fretted.Tuning([pitch.parse(note) for note in 'c2 g2 c3 f3 c4 e4'.split()], capo=3), 
		17, characters_per_note=1
	)
).parse('''
|------0-----|------0-----|------0-----|------0-----|------0-----| 
|---0-----0--|---0-----0--|---0-----0--|---0-----0--|---0-----0--| 
|5-----5-----|4-----4-----|3-----3-----|02----2-----|02----2-----| 
|---0-----0--|---0-----0--|---0-----0--|---0-----0--|---0-----0--| 
|--0---0-0-0-|--0---0-0-0-|--0---0-0-0-|--0---0-0-0-|--0---0-0-0-| 
|0---0-------|0---0-------|0---0-------|0---0-------|0---0-------|
''')

three_hours = stored.Composition(transposition, 
	fretted.Tab(
		fretted.Tuning([pitch.parse(note) for note in 'b1 b2 d3 g3 b3 e4'.split()], capo=0), 
		17, characters_per_note=2
	)
).parse('''
|---2---0-2-----|---0-------------|---------------|---0-----2-------
|---0---0-0-0---|-3---2-0---------|---0-----2-----|-4---4---------0-
|---4---4-4-----|-4-4-4-4-----4---|---2-----0-----|---0-----4---4---
|-----------4---|-4---4-4-----4---|---2-----2-----|-4---4-----------
|-0---0-------0-|-----------------|-0---0-----0---|-0-----0---0-----
|---------------|---------------0-|-------0-----0-|-----------------

|-2--2--2-0-2-----|---0-------------|-----------------|------
|----0--0-0-0---3-|-----2---0-------|-----0-------2---|------
|----4--4-4-4---4-|---4-4---4-------|-----2-------0---|------
|---------------4-|-----4---4---4---|-----2-------2---|----2-
|------0-0----0---|-0-----0-------0-|---0---0---0-----|------
|-----------------|-----------------|-0-------0-------|------
''')

introduction = stored.Composition(transposition, 
	fretted.Tab(
		fretted.Tuning([pitch.parse(note) for note in 'd2 a2 d3 g3 b3 e4'.split()], capo=0), 
		17, characters_per_note=3
	)
).parse('''
|--------------------------2------------------------
|-----------------3-----------3---------------------
|--------------5-----5-----------5------------------
|-----------0-----------0-----------0---------------
|--------0-----------------------------0-----0------
|--0------------------------------------------------

--------------------------2------------------------
-----------------3-----------------3---------------
--------------4--------4--------4-----4------------
-----------0--------0--------0-----------0---------
--------0-----------------------------------0------
--0------------------------------------------------

--------------------------2------------------------
-----------------3-----------------3---------------
--------------0--------0--------0-----0------------
-----------4--------4--------4-----------4---------
--------0-----------------------------------0------
--0------------------------------------------------

--------------------------2------------------------
-----------------3-----------------3---------------
--------------2--------2--------2-----2------------
-----------0--------0--------0-----------0---------
--------0-----------------------------------0------
--0------------------------------------------------

--------------------------3------------------------
-----------------3-----------------3---------------
--------------4--------4--------4-----4------------
-----------0--------0--------0-----------0---------
--------0-----------------------------------0------
--0------------------------------------------------

--------------------------2------------------------
-----------------3-----------------3---------------
--------------4--------4--------2-----2------------
-----------0--------0--------0-----------0---------
--------0-----------------------------------0------
--0------------------------------------------------

--------------------------2--------0---------------
-----------------3--------------------------3------
--------------0--------0--------0--------0---------
-----------4--------4--------4--------4------------
--------0------------------------------------------
--0------------------------------------------------

--------------------------2------------------------
-----------------3-----------3-----3---------------
--------------2--------2--------2-----2------------
-----------0--------0--------------------0---------
--------0-----------------------------------0------
--0------------------------------------------------
''')

pyaudio = PyAudio()
play = played.sound(
    pyaudio.open(format=pyaudio.get_format_from_width(1), # open stream
        channels=1,
        rate=41900,
        output=True
    ), 41900
)

staffed = (staff(introduction))
play(played.staff(et12, played.sine(0.1), 4) (staffed), len(staffed)/2)
print([[pitch.format(note) for note in sorted(beat)] for beat in staffed ])

tuning = fretted.Tuning([pitch.parse(note) for note in 'e2 a2 d3 g3 b3 e4'.split()], capo=0)

